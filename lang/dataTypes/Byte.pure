referencing Pure

native copied Byte class: Number {
	overriding instances ZERO(0), ONE(1)

	overriding computed absolute: Self
		gets if this >= 0 this else -this
	overriding computed squared: Self
		gets this * this
	overriding computed cubed: Self
		gets this * this * this

	native init(value: Byte)
	//TODO remove second parameter when labels are implemented to disambiguate
	native init(value: Int, flag: Int)

	native operator ++
	native operator --
	native overriding operator -: Self
	native overriding monomorphic operator +=(right: Self)
	native overriding monomorphic operator -=(right: Self)
	native overriding monomorphic operator *=(right: Self)
	native overriding monomorphic operator /=(right: Self)
	native overriding monomorphic operator +(right: Self): Self
	operator +(right: Int): Int {
		return Int(this) + right
	}
	operator +(right: Float): Float {
		return Float(this) + right
	}
	native overriding monomorphic operator -(right: Self): Self
	operator -(right: Int): Int {
		return Int(this) - right
	}
	operator -(right: Float): Float {
		return Float(this) - right
	}
	native overriding monomorphic operator *(right: Self): Self
	operator *(right: Int): Int {
		return Int(this) * right
	}
	operator *(right: Float): Float {
		return Float(this) * right
	}
	native overriding monomorphic operator /(right: Self): Self
	operator /(right: Int): Int {
		return Int(this) / right
	}
	operator /(right: Float): Float {
		return Float(this) / right
	}
	native overriding monomorphic operator <(right: Self): Bool
	operator <(right: Int): Bool {
		return Int(this) < right
	}
	operator <(right: Float): Bool {
		return Float(this) < right
	}
	native overriding monomorphic operator >(right: Self): Bool
	operator >(right: Int): Bool {
		return Int(this) > right
	}
	operator >(right: Float): Bool {
		return Float(this) > right
	}
	native overriding monomorphic operator <=(right: Self): Bool
	operator <=(right: Int): Bool {
		return Int(this) <= right
	}
	operator <=(right: Float): Bool {
		return Float(this) <= right
	}
	native overriding monomorphic operator >=(right: Self): Bool
	operator >=(right: Int): Bool {
		return Int(this) >= right
	}
	operator >=(right: Float): Bool {
		return Float(this) >= right
	}
	native operator ==(right: Byte): Bool
	native operator !=(right: Byte): Bool
	overriding operator ==(right: Any?): Bool {
		if(right is! Byte)
			return no
		return this == right
	}
	overriding operator !=(right: Any?): Bool {
		return !(this == right)
	}
}
